{"version":3,"file":"static/js/415.a2e61c12.chunk.js","mappings":"+SAEMA,EAAW,mCAEJC,EAAS,mCAAG,sGACAC,EAAAA,EAAAA,IAAA,kEACsCF,IAFtC,uBACfG,EADe,EACfA,KADe,kBAIhBA,GAJgB,2CAAH,qDAOTC,EAAY,mCAAG,WAAMC,GAAN,yFACHH,EAAAA,EAAAA,IAAA,4DACgCF,EADhC,kBACkDK,IAF/C,uBAClBF,EADkB,EAClBA,KADkB,kBAInBA,GAJmB,2CAAH,sDAOZG,EAAa,mCAAG,WAAMC,GAAN,yFACJL,EAAAA,EAAAA,IAAA,6CACiBK,EADjB,oBAC+BP,IAF3B,uBACnBG,EADmB,EACnBA,KADmB,kBAIpBA,GAJoB,2CAAH,sDAObK,EAAU,mCAAG,WAAMD,GAAN,yFACDL,EAAAA,EAAAA,IAAA,6CACiBK,EADjB,4BACuCP,IAFtC,uBAChBG,EADgB,EAChBA,KADgB,kBAIjBA,GAJiB,2CAAH,sDAOVM,EAAa,mCAAG,WAAMF,GAAN,yFACJL,EAAAA,EAAAA,IAAA,6CACiBK,EADjB,4BACuCP,IAFnC,uBACnBG,EADmB,EACnBA,KADmB,kBAIpBA,GAJoB,2CAAH,qD,sDC/B1B,MAAuB,2B,SCOvB,EANqB,SAAC,GAA2B,IAAzBO,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,SAC/B,OAAID,GACK,eAAIE,UAAWC,EAAf,SAAyB,oCAE3B,8BAAGF,GACX,C,mICyCD,UAzCa,WACX,OAA4BG,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOJ,EAAP,KAAgBO,EAAhB,KACA,GAA8CH,EAAAA,EAAAA,WAAS,GAAvD,eAAOI,EAAP,KAAwBC,EAAxB,KACMC,GAAWC,EAAAA,EAAAA,MAmBjB,OAjBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,sGAEIH,GAAmB,GAFvB,UAGuBlB,EAAAA,EAAAA,MAHvB,OAGUE,EAHV,OAIUY,EAASZ,EAAKoB,QACpBP,EAAUD,GALd,gDAOIE,GAAW,GACXO,QAAQC,MAAR,MARJ,yBAUIN,GAAmB,GAVvB,6EADc,uBAAC,WAAD,wBAcdO,EACD,GAAE,KAGD,6BACE,wBAAI,oBACHR,IAAmB,SAAC,IAAD,KACpB,SAAC,IAAD,CAAcR,QAASA,EAAvB,UACE,wBACGK,EAAOY,KAAI,gBAAGpB,EAAH,EAAGA,GAAIqB,EAAP,EAAOA,MAAOC,EAAd,EAAcA,KAAd,OACV,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAavB,GAAMwB,MAAO,CAAEC,KAAMZ,GAA1C,SACGQ,GAASC,KAFLtB,EADC,UAWrB,C","sources":["components/Api/JsonthemoviedbApi.js","webpack://react-homework-template/./src/pages/Error/ErrorWrapper.module.css?a2e1","pages/Error/ErrorWrapper.js","pages/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst myApiKey = 'e4e77b2d83733ec5f4ee2698cbe57afc';\n\nexport const getMovies = async () => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${myApiKey}`\n  );\n  return data;\n};\n\nexport const searchMovies = async query => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${myApiKey}&query=${query}`\n  );\n  return data;\n};\n\nexport const detailsMovies = async id => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${myApiKey}`\n  );\n  return data;\n};\n\nexport const castMovies = async id => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${myApiKey}`\n  );\n  return data;\n};\n\nexport const reviewsMovies = async id => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${myApiKey}`\n  );\n  return data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"info\":\"ErrorWrapper_info__+NeD9\"};","import css from './ErrorWrapper.module.css';\n\nconst ErrorWrapper = ({ isError, children }) => {\n  if (isError) {\n    return <h1 className={css.info}>Ooops!!! Something went wrong!</h1>;\n  }\n  return <>{children}</>;\n};\nexport default ErrorWrapper;\n","import { useState, useEffect } from 'react';\n// import PropTypes from 'prop-types';\nimport Loader from '../components/Loader/Loader';\nimport { getMovies } from '../components/Api/JsonthemoviedbApi';\nimport ErrorWrapper from './Error/ErrorWrapper';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [isError, setIsError] = useState(false);\n  const [isLoaderVisible, setIsLoaderVisible] = useState(false);\n  const location = useLocation();\n\n  useEffect(() => {\n    async function getMove() {\n      try {\n        setIsLoaderVisible(true);\n        const data = await getMovies();\n        const movies = data.results;\n        setMovies(movies);\n      } catch (error) {\n        setIsError(true);\n        console.error(error);\n      } finally {\n        setIsLoaderVisible(false);\n      }\n    }\n    getMove();\n  }, []);\n\n  return (\n    <main>\n      <h1> Trending today</h1>\n      {isLoaderVisible && <Loader />}\n      <ErrorWrapper isError={isError}>\n        <ul>\n          {movies.map(({ id, title, name }) => (\n            <li key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                {title || name}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </ErrorWrapper>\n    </main>\n  );\n};\nexport default Home;\n"],"names":["myApiKey","getMovies","axios","data","searchMovies","query","detailsMovies","id","castMovies","reviewsMovies","isError","children","className","css","useState","movies","setMovies","setIsError","isLoaderVisible","setIsLoaderVisible","location","useLocation","useEffect","results","console","error","getMove","map","title","name","to","state","from"],"sourceRoot":""}